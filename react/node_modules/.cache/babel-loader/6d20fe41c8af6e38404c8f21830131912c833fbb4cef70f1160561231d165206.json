{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import ApiService from\"../../service/ApiService\";import'../../style/address.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddressPage=()=>{const[address,setAddress]=useState({street:'',city:'',state:'',zipCode:'',country:''});const[error,setError]=useState(null);const navigate=useNavigate();const location=useLocation();useEffect(()=>{if(location.pathname==='/edit-address'){fetchUserInfo();}},[location.pathname]);const fetchUserInfo=async()=>{try{const response=await ApiService.getLoggedInUserInfo();if(response.user.address){setAddress(response.user.address);}}catch(error){var _error$response,_error$response$data;setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message||\"unable to fetch user information\");}};const handleChange=e=>{const{name,value}=e.target;setAddress(prevAddress=>({...prevAddress,[name]:value}));};const handSubmit=async e=>{e.preventDefault();try{await ApiService.saveAddress(address);navigate(\"/profile\");}catch(error){var _error$response2,_error$response2$data;setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message||\"Failed to save/update address\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"address-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:location.pathname==='/edit-address'?'Edit Address':\"Add Addresss\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Street:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"street\",value:address.street,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"City:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"city\",value:address.city,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"State:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"state\",value:address.state,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Zip Code:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"zipcode\",value:address.zipCode,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Country:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"country\",value:address.country,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:location.pathname==='/edit-address'?'Edit Address':\"Save Addresss\"})]})]});};export default AddressPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","ApiService","jsx","_jsx","jsxs","_jsxs","AddressPage","address","setAddress","street","city","state","zipCode","country","error","setError","navigate","location","pathname","fetchUserInfo","response","getLoggedInUserInfo","user","_error$response","_error$response$data","data","message","handleChange","e","name","value","target","prevAddress","handSubmit","preventDefault","saveAddress","_error$response2","_error$response2$data","className","children","onSubmit","type","onChange","required"],"sources":["C:/Mahesh/Spring-POC/e-commerse-full-app/react/src/component/pages/AddressPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport '../../style/address.css';\n\nconst AddressPage = () => {\n\n    const [address, setAddress] = useState({\n        street: '',\n        city: '',\n        state: '',\n        zipCode: '',\n        country: ''\n    });\n\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n    const location = useLocation();\n\n\n    useEffect(() => {\n\n        if (location.pathname === '/edit-address') {\n            fetchUserInfo();\n        }\n    }, [location.pathname]);\n\n\n    const fetchUserInfo = async()=>{\n        try {\n            const response = await ApiService.getLoggedInUserInfo();\n            if (response.user.address) {\n                setAddress(response.user.address)\n            }\n        } catch (error) {\n            setError(error.response?.data?.message || error.message || \"unable to fetch user information\")\n        }\n    } ;\n\n    const handleChange = (e) =>{\n        const {name, value} = e.target;\n        setAddress((prevAddress) => ({\n            ...prevAddress,\n            [name]: value\n        }))\n    }\n\n    const handSubmit = async (e) =>{\n        e.preventDefault();\n        try {\n            await ApiService.saveAddress(address);\n            navigate(\"/profile\")\n        } catch (error) {\n            setError(error.response?.data?.message || error.message || \"Failed to save/update address\")\n        }\n    }\n\n\n    return(\n        <div className=\"address-page\">\n            <h2>{location.pathname === '/edit-address' ? 'Edit Address' : \"Add Addresss\"}</h2>\n            {error && <p className=\"error-message\">{error}</p>}\n            \n            <form onSubmit={handSubmit}>\n                <label>\n                    Street:\n                    <input type=\"text\"\n                    name=\"street\"\n                    value={address.street}\n                    onChange={handleChange}\n                    required/>\n                </label>\n                <label>\n                    City:\n                    <input type=\"text\"\n                    name=\"city\"\n                    value={address.city}\n                    onChange={handleChange}\n                    required/>\n                </label>\n                <label>\n                    State:\n                    <input type=\"text\"\n                    name=\"state\"\n                    value={address.state}\n                    onChange={handleChange}\n                    required/>\n                </label>\n\n                <label>\n                    Zip Code:\n                    <input type=\"text\"\n                    name=\"zipcode\"\n                    value={address.zipCode}\n                    onChange={handleChange}\n                    required/>\n                </label>\n\n                <label>\n                    Country:\n                    <input type=\"text\"\n                    name=\"country\"\n                    value={address.country}\n                    onChange={handleChange}\n                    required/>\n                </label>\n                <button type=\"submit\">{location.pathname === '/edit-address' ? 'Edit Address' : \"Save Addresss\"}</button>\n\n            </form>\n        </div>\n    )\n}\n\nexport default AddressPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}